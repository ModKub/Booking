{"version":3,"sources":["components/Modal.js","Booking.js","App.js","serviceWorker.js","index.js"],"names":["OverlayContainer","styled","_templateObject","Overlay","_templateObject2","ContentContainer","_templateObject3","Modal","props","_useState","useState","document","getElementById","modalRoot","Object","slicedToArray","_useState3","createElement","el","useEffect","appendChild","removeChild","ReactDOM","createPortal","react_default","a","onClick","close","children","Hour","isBooked","undefined","startBooking","className","style","width","height","transition","marginBottom","background","hour","Day","bookedHours","booked","map","fontSize","dayName","date","format","hours","i","includes","Booking_Hour","key","Book","padding","name","onSubmit","e","preventDefault","book","type","value","bookName","required","onChange","setBookName","target","bookMail","setBookMail","closeModal","marginLeft","Booking","_useState2","_useState4","_useState5","_useState6","bookDate","setBookDate","_useState7","_useState8","bookHour","setBookHour","_useState9","moment","_useState10","currentDay","setCurrentDay","_useState11","_useState12","daysToDisplay","setDaysToDisplay","_useState13","_useState14","startedBooking","setStartedBooking","_useState15","email","_useState16","setBooked","tempDays","push","clone","add","position","maxWidth","margin","dates","filter","Booking_Day","toUpperCase","subtract","Booking_Book","temp","App","src_Booking","Boolean","window","location","hostname","match","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0156a780.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport ReactDOM from 'react-dom'\nimport styled from '@emotion/styled'\n\nconst OverlayContainer = styled('div')`\n  position: fixed;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  z-index: 100;\n`\n\nconst Overlay = styled('div')`\n  position: absolute;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  background: black;\n  opacity: 0.4;\n  cursor: pointer;\n  display: flex;\n  align-itmes: center;\n`\n\nconst ContentContainer = styled('div')`\n  position: absolute;\n  top: calc(50% - 150px);\n  left: calc(50% - 150px);\n  background: white;\n  border-radius: 3px;\n  border: 1px solid white;\n`\n\nexport default function Modal(props) {\n  const [modalRoot] = useState(document.getElementById('root'))\n  const [el] = useState(document.createElement('div'))\n  useEffect(() => {\n    modalRoot.appendChild(el)\n    return () => {\n      modalRoot.removeChild(el)\n    }\n  }, [el, modalRoot])\n\n  const subRender = () => {\n    return <OverlayContainer>\n      <Overlay onClick={props.close} />\n      <ContentContainer>\n        {props.children}\n      </ContentContainer>\n    </OverlayContainer>\n  }\n  return ReactDOM.createPortal(\n    subRender(),\n    el\n  )\n}\n","import React, {useState, useEffect} from 'react'\nimport moment from 'moment'\nimport 'moment/locale/pl'\n\nimport Modal from './components/Modal'\n\n\nconst Hour = props => {\n  return <div\n    onClick={!props.isBooked ? props.startBooking : undefined}\n    className='rounded-full text-grey-darkest bg-white hover:bg-blue hover:text-white flex items-center hover:text-4xl justify-center cursor-pointer border border-blue-dark'\n    style={{ width: '60px', height: '60px', transition: '0.3s', marginBottom: '5px', background: props.isBooked && 'grey' }}>\n    <span>{props.hour}</span>\n  </div>\n}\n\nconst Day = props => {\n  const bookedHours = props.booked.map(el => el.hour)\n  return <div className='flex flex-col items-center' style={{marginBottom: '10px'}}>\n    <div className='flex flex-col text-grey-darker items-center' style={{marginBottom: '10px'}}>\n      <div style={{ fontSize: '20px' }}>{props.dayName}</div>\n      <div>{props.date.format('DD.MM.YY')}</div>\n    </div>\n    {props.hours.map((el, i) => {\n      const isBooked = bookedHours.includes(el)\n      return <Hour isBooked={isBooked} startBooking={() => props.startBooking(props.date, el)} key={i} hour={el} />\n    })}\n  </div>\n}\n\nconst Book = props => {\n  return <div style={{marginBottom: '10px', padding: '30px', width: '300px', height: '300px'}}>\n    <div className='text-grey-dark border-b' style={{ fontSize: '24px', marginBottom: '10px' }}>{props.name}</div>\n    <div>Termin</div>\n    <div style={{ marginBottom: '20px' }}>{props.date.format('LL')} godzina {props.hour}</div>\n    <form onSubmit={(e) => {\n        e.preventDefault()\n        props.book(e, props.date, props.hour)\n      }}>\n      <div style={{ marginBottom: '10px' }}>\n        <label>\n          * Imie i nazwisko:\n          <input type='text' className='border' value={props.bookName} required onChange={e => props.setBookName(e.target.value)} />\n        </label>\n      </div>\n      <div style={{ marginBottom: '10px' }}>\n        <label>\n          * E-mail:\n          <input type='email' className='border' value={props.bookMail} required onChange={(e) => props.setBookMail(e.target.value)} />\n        </label>\n      </div>\n\n        <button type='submit' className='bg-blue hover:bg-blue-dark text-white font-bold py-2 px-4 rounded'>\n          Zarezerwuj\n        </button>\n        <button type='button' onClick={props.closeModal} className='bg-red hover:bg-blue-dark text-white font-bold py-2 px-4 rounded' style={{ marginLeft: '5px' }}>\n          Anuluj\n        </button>\n    </form>\n  </div>\n}\n\nconst Booking = () => {\n  const name = 'Jakub Modzelewski'\n  const hours = ['8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00', '16:00', '17:00', '18:00', '19:00', '20:00', '21:00']\n  const [bookName, setBookName] = useState('')\n  const [bookMail, setBookMail] = useState('')\n  const [bookDate, setBookDate] = useState('')\n  const [bookHour, setBookHour] = useState('')\n  const [currentDay, setCurrentDay] = useState(moment())\n  const [daysToDisplay, setDaysToDisplay] = useState([])\n  const [startedBooking, setStartedBooking] = useState(false)\n  const [booked, setBooked] = useState([{name: 'Jakub Modzelewski', email: 'modzelewski.kuba@gmail.com', date: moment(), hour: '11:00'}, {name: 'Jakub Modzelewski', email: 'modzelewski.kuba@gmail.com', date: moment(), hour: '18:00'}])\n  const date = moment()\n\n\n\n  const displayNextWeek = () => {\n    setCurrentDay(currentDay.clone().add(7, 'd'))\n  }\n\n  const displayPreviousWeek = () => {\n    setCurrentDay(currentDay.clone().subtract(7, 'd'))\n  }\n\n  const startBooking = (date, hour) => {\n    setStartedBooking(true)\n    setBookDate(date)\n    setBookHour(hour)\n  }\n\n  const book = (e, date, hour) => {\n    let temp = booked\n    temp.push({ name: bookName, email: bookMail, date, hour })\n    setBooked(temp)\n    setStartedBooking(false)\n    setBookMail('')\n    setBookName('')\n  }\n\n  useEffect(() => {\n    let tempDays = []\n    for (let i = 0; i < 7; i++) {\n      tempDays.push(currentDay.clone().add(i, 'd'))\n    }\n    setDaysToDisplay(tempDays)\n  }, [currentDay])\n\n  if (!daysToDisplay[0]) return null\n  return <div style={{ position: 'relative', maxWidth: '800px' }}>\n    <div className='text-grey-darker' style={{ fontSize: '24px' }}>{name}</div>\n    <div\n      onClick={() => {\n        setCurrentDay(moment())\n      }}\n      className='rounded-full text-grey-darkest bg-white hover:bg-blue hover:text-white flex items-center justify-center cursor-pointer border border-blue-dark float-right'\n      style={{ width: '60px', height: '60px', transition: '0.3s', marginBottom: '5px' }}>\n      <span>TODAY</span>\n    </div>\n    <div className='flex flexHelper justify-between flex-wrap' style={{padding: '30px', margin: '0 30px'}}>\n      {daysToDisplay.map((el, i) => {\n        const dates = booked.filter(book => book.date.format('LL') === el.format('LL'))\n          return <Day key={i} booked={dates} startBooking={startBooking} dayName={el.format('ddd').toUpperCase()} date={el} hours={hours} />\n        })\n      }\n    </div>\n    <div className='nextPosition'>\n      <i style={{ fontSize: '40px' }} className='fas fa-chevron-right text-grey-darker hover:text-grey cursor-pointer' onClick={displayNextWeek} />\n    </div>\n    {date < daysToDisplay[0] &&\n      <div className='backPosition'>\n        <i style={{ fontSize: '40px' }} className='fas fa-chevron-left text-grey-darker hover:text-grey cursor-pointer' onClick={displayPreviousWeek} />\n      </div>\n    }\n    {startedBooking &&\n      <Modal close={() => setStartedBooking(false)}>\n        <Book closeModal={() => setStartedBooking(false)} name={name} book={book} setBookName={setBookName} setBookMail={setBookMail} bookName={bookName} bookMail={bookMail} date={bookDate} hour={bookHour} />\n      </Modal>\n    }\n  </div>\n}\n\nexport default Booking\n","import React from 'react'\nimport Booking from './Booking'\n\nfunction App() {\n  return (\n    <div>\n      <Booking />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}